# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/implementations/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libhfst
pkgincludedir = $(includedir)/libhfst
pkglibdir = $(libdir)/libhfst
pkglibexecdir = $(libexecdir)/libhfst
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = src/implementations
DIST_COMMON = $(fomainclude_HEADERS) $(hfstinclude_HEADERS) \
	$(implinclude_HEADERS) $(sfstinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libhfstimplementations_la_LIBADD =
am__objects_1 = SymbolDefs.lo GlobalSymbolTable.lo HfstTokenizer.lo \
	ConvertTransducerFormat.lo
am__objects_2 = SfstTransducer.lo TropicalWeightTransducer.lo \
	LogWeightTransducer.lo LogFstTrieFunctions.lo \
	FomaTransducer.lo
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_3 = SFST/src/alphabet.lo SFST/src/basic.lo \
	SFST/src/compact.lo SFST/src/fst.lo SFST/src/generate.lo \
	SFST/src/interface.lo SFST/src/determinise.lo \
	SFST/src/lowmem.lo SFST/src/make-compact.lo \
	SFST/src/operators.lo SFST/src/robust.lo SFST/src/utf8.lo
am__objects_4 = foma/apply.lo foma/flags.lo foma/lex.yy.lo \
	foma/spelling.lo foma/coaccessible.lo foma/int_stack.lo \
	foma/mem.lo foma/structures.lo foma/constructions.lo \
	foma/invert.lo foma/minimize.lo foma/topsort.lo foma/define.lo \
	foma/io.lo foma/regex.tab.lo foma/utf8.lo foma/determinize.lo \
	foma/lex.cmatrix.lo foma/reverse.lo foma/dynarray.lo \
	foma/lexcread.lo foma/rewrite.lo foma/extract.lo \
	foma/lex.lexc.lo foma/sigma.lo
am__objects_5 = openfst-1.1/src/lib/compat.lo \
	openfst-1.1/src/lib/fst.lo openfst-1.1/src/lib/properties.lo \
	openfst-1.1/src/lib/symbol-table.lo \
	openfst-1.1/src/lib/flags.lo openfst-1.1/src/lib/util.lo
am_libhfstimplementations_la_OBJECTS = $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5)
libhfstimplementations_la_OBJECTS =  \
	$(am_libhfstimplementations_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libhfstimplementations_la_SOURCES)
DIST_SOURCES = $(libhfstimplementations_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(fomaincludedir)" \
	"$(DESTDIR)$(hfstincludedir)" "$(DESTDIR)$(implincludedir)" \
	"$(DESTDIR)$(sfstincludedir)"
HEADERS = $(fomainclude_HEADERS) $(hfstinclude_HEADERS) \
	$(implinclude_HEADERS) $(sfstinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -march=native -g -Wall -Wextra
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -march=native -g -Wall -Wextra
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/i686-pc-linux-gnu/bin/ld
LDCONFIG = echo
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBHFST_MAJOR = 3
LIBHFST_MINOR = 0
LIBHFST_NAME = hfst
LIBHFST_VERSION = 3.0_alpha
LIBOBJS = 
LIBS = -lz -lm -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libhfst
PACKAGE_BUGREPORT = hfst-bugs@helsinki.fi
PACKAGE_NAME = libhfst
PACKAGE_STRING = libhfst 3.0
PACKAGE_TARNAME = libhfst
PACKAGE_URL = 
PACKAGE_VERSION = 3.0
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 3.0
YACC = bison -y
YFLAGS = -v
abs_builddir = /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/src/implementations
abs_srcdir = /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/src/implementations
abs_top_builddir = /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst
abs_top_srcdir = /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/flammie/src/hfst-svn/trunk/hfst3_proposition/libhfst/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#SUBDIRS=foma SFST/src openfst-1.1
AUTOMAKE_OPTIONS = subdir-objects
noinst_LTLIBRARIES = libhfstimplementations.la
# HFST bridge specific stuff
IMPLEMENTATION_SRCS = SymbolDefs.cc GlobalSymbolTable.cc \
	HfstTokenizer.cc ConvertTransducerFormat.cc


# the bridges
BRIDGE_SRCS = SfstTransducer.cc \
	TropicalWeightTransducer.cc \
	LogWeightTransducer.cc \
	LogFstTrieFunctions.cc \
	FomaTransducer.cc


# underlying backend objects
SFST_SRCS = \
	SFST/src/alphabet.C         \
	SFST/src/basic.C            \
	SFST/src/compact.C          SFST/src/fst.C     SFST/src/generate.C\
	SFST/src/interface.C\
	SFST/src/determinise.C      SFST/src/lowmem.C\
	SFST/src/make-compact.C\
	SFST/src/operators.C\
	SFST/src/robust.C           SFST/src/utf8.C

OFST_LIBS = openfst-1.1/src/lib/libfst.la
OFST_SRCS = \
		  openfst-1.1/src/lib/compat.cc \
		  openfst-1.1/src/lib/fst.cc \
		  openfst-1.1/src/lib/properties.cc \
		  openfst-1.1/src/lib/symbol-table.cc \
		  openfst-1.1/src/lib/flags.cc \
		  openfst-1.1/src/lib/util.cc 

FOMA_SRCS = \
foma/apply.c          foma/flags.c        foma/lex.yy.c     foma/spelling.c\
foma/coaccessible.c   foma/int_stack.c    foma/mem.c        foma/structures.c\
foma/constructions.c  foma/invert.c       foma/minimize.c   foma/topsort.c\
foma/define.c         foma/io.c           foma/regex.tab.c  foma/utf8.c\
foma/determinize.c    foma/lex.cmatrix.c  foma/reverse.c\
foma/dynarray.c       foma/lexcread.c     foma/rewrite.c\
foma/extract.c        foma/lex.lexc.c     foma/sigma.c

libhfstimplementations_la_SOURCES = $(IMPLEMENTATION_SRCS) $(BRIDGE_SRCS) \
								  $(SFST_SRCS) $(FOMA_SRCS) $(OFST_SRCS)


# should work like so:
# libhfstimplementations_la_LIBADD=$(OFST_LIBS)

# headers of implementation bridge to reveal to public
hfstincludedir = $(includedir)/hfst
implincludedir = $(hfstincludedir)/implementations
implinclude_HEADERS = \
		ConvertTransducerFormat.h \
		ExtractStrings.h FomaTransducer.h GlobalSymbolTable.h HfstExceptions.h \
		HfstTokenizer.h LogFstTrieFunctions.h LogWeightTransducer.h \
		SfstTransducer.h SymbolDefs.h TropicalWeightTransducer.h


# headers of backends to reveal to public...
# TODO: in ideal case you'd delete these and link to public libs of backends
# using public headers of backends
sfstincludedir = $(implincludedir)/SFST/src
ofstincludedir = $(implincludedir)/openfst-1.1/src/include/fst
fomaincludedir = $(implincludedir)/foma
SFST_DIR = SFST/src
SFST_HDRS = \
		$(SFST_DIR)/alphabet.h $(SFST_DIR)/basic.h $(SFST_DIR)/compact.h \
		$(SFST_DIR)/make-compact.h $(SFST_DIR)/fst.h $(SFST_DIR)/mem.h \
		$(SFST_DIR)/lowmem.h \
		$(SFST_DIR)/utf8.h

# $(SFST_DIR)/tokenize_functions.h 
# $(SFST_DIR)/binSearch.h $(SFST_DIR)/transducer-conversion.h
# $(SFST_DIR)/lookup.h $(SFST_DIR)/fst-lex.h $(SFST_DIR)/fst-regression.h
# $(SFST_DIR)/runtime_conversion.h 
# $(SFST_DIR)/read_runtime_transducer.h
# $(SFST_DIR)/runtime_type_defs.h
OFST_DIR = openfst-1.1/src/include/fst/
OFST_HDRS = \
	$(OFST_DIR)/*.h

FOMA_HDRS = \
		foma/foma.h

hfstinclude_HEADERS = $(HFST_HDRS)
sfstinclude_HEADERS = $(SFST_HDRS)
fomainclude_HEADERS = $(FOMA_HDRS)
all: all-am

.SUFFIXES:
.SUFFIXES: .C .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/implementations/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/implementations/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
SFST/src/$(am__dirstamp):
	@$(MKDIR_P) SFST/src
	@: > SFST/src/$(am__dirstamp)
SFST/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) SFST/src/$(DEPDIR)
	@: > SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/alphabet.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/basic.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/compact.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/fst.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/generate.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/interface.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/determinise.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/lowmem.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/make-compact.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/operators.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/robust.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
SFST/src/utf8.lo: SFST/src/$(am__dirstamp) \
	SFST/src/$(DEPDIR)/$(am__dirstamp)
foma/$(am__dirstamp):
	@$(MKDIR_P) foma
	@: > foma/$(am__dirstamp)
foma/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) foma/$(DEPDIR)
	@: > foma/$(DEPDIR)/$(am__dirstamp)
foma/apply.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/flags.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/lex.yy.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/spelling.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/coaccessible.lo: foma/$(am__dirstamp) \
	foma/$(DEPDIR)/$(am__dirstamp)
foma/int_stack.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/mem.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/structures.lo: foma/$(am__dirstamp) \
	foma/$(DEPDIR)/$(am__dirstamp)
foma/constructions.lo: foma/$(am__dirstamp) \
	foma/$(DEPDIR)/$(am__dirstamp)
foma/invert.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/minimize.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/topsort.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/define.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/io.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/regex.tab.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/utf8.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/determinize.lo: foma/$(am__dirstamp) \
	foma/$(DEPDIR)/$(am__dirstamp)
foma/lex.cmatrix.lo: foma/$(am__dirstamp) \
	foma/$(DEPDIR)/$(am__dirstamp)
foma/reverse.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/dynarray.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/lexcread.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/rewrite.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/extract.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/lex.lexc.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
foma/sigma.lo: foma/$(am__dirstamp) foma/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/$(am__dirstamp):
	@$(MKDIR_P) openfst-1.1/src/lib
	@: > openfst-1.1/src/lib/$(am__dirstamp)
openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) openfst-1.1/src/lib/$(DEPDIR)
	@: > openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/compat.lo: openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/fst.lo: openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/properties.lo:  \
	openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/symbol-table.lo:  \
	openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/flags.lo: openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
openfst-1.1/src/lib/util.lo: openfst-1.1/src/lib/$(am__dirstamp) \
	openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
libhfstimplementations.la: $(libhfstimplementations_la_OBJECTS) $(libhfstimplementations_la_DEPENDENCIES) 
	$(CXXLINK)  $(libhfstimplementations_la_OBJECTS) $(libhfstimplementations_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f SFST/src/alphabet.$(OBJEXT)
	-rm -f SFST/src/alphabet.lo
	-rm -f SFST/src/basic.$(OBJEXT)
	-rm -f SFST/src/basic.lo
	-rm -f SFST/src/compact.$(OBJEXT)
	-rm -f SFST/src/compact.lo
	-rm -f SFST/src/determinise.$(OBJEXT)
	-rm -f SFST/src/determinise.lo
	-rm -f SFST/src/fst.$(OBJEXT)
	-rm -f SFST/src/fst.lo
	-rm -f SFST/src/generate.$(OBJEXT)
	-rm -f SFST/src/generate.lo
	-rm -f SFST/src/interface.$(OBJEXT)
	-rm -f SFST/src/interface.lo
	-rm -f SFST/src/lowmem.$(OBJEXT)
	-rm -f SFST/src/lowmem.lo
	-rm -f SFST/src/make-compact.$(OBJEXT)
	-rm -f SFST/src/make-compact.lo
	-rm -f SFST/src/operators.$(OBJEXT)
	-rm -f SFST/src/operators.lo
	-rm -f SFST/src/robust.$(OBJEXT)
	-rm -f SFST/src/robust.lo
	-rm -f SFST/src/utf8.$(OBJEXT)
	-rm -f SFST/src/utf8.lo
	-rm -f foma/apply.$(OBJEXT)
	-rm -f foma/apply.lo
	-rm -f foma/coaccessible.$(OBJEXT)
	-rm -f foma/coaccessible.lo
	-rm -f foma/constructions.$(OBJEXT)
	-rm -f foma/constructions.lo
	-rm -f foma/define.$(OBJEXT)
	-rm -f foma/define.lo
	-rm -f foma/determinize.$(OBJEXT)
	-rm -f foma/determinize.lo
	-rm -f foma/dynarray.$(OBJEXT)
	-rm -f foma/dynarray.lo
	-rm -f foma/extract.$(OBJEXT)
	-rm -f foma/extract.lo
	-rm -f foma/flags.$(OBJEXT)
	-rm -f foma/flags.lo
	-rm -f foma/int_stack.$(OBJEXT)
	-rm -f foma/int_stack.lo
	-rm -f foma/invert.$(OBJEXT)
	-rm -f foma/invert.lo
	-rm -f foma/io.$(OBJEXT)
	-rm -f foma/io.lo
	-rm -f foma/lex.cmatrix.$(OBJEXT)
	-rm -f foma/lex.cmatrix.lo
	-rm -f foma/lex.lexc.$(OBJEXT)
	-rm -f foma/lex.lexc.lo
	-rm -f foma/lex.yy.$(OBJEXT)
	-rm -f foma/lex.yy.lo
	-rm -f foma/lexcread.$(OBJEXT)
	-rm -f foma/lexcread.lo
	-rm -f foma/mem.$(OBJEXT)
	-rm -f foma/mem.lo
	-rm -f foma/minimize.$(OBJEXT)
	-rm -f foma/minimize.lo
	-rm -f foma/regex.tab.$(OBJEXT)
	-rm -f foma/regex.tab.lo
	-rm -f foma/reverse.$(OBJEXT)
	-rm -f foma/reverse.lo
	-rm -f foma/rewrite.$(OBJEXT)
	-rm -f foma/rewrite.lo
	-rm -f foma/sigma.$(OBJEXT)
	-rm -f foma/sigma.lo
	-rm -f foma/spelling.$(OBJEXT)
	-rm -f foma/spelling.lo
	-rm -f foma/structures.$(OBJEXT)
	-rm -f foma/structures.lo
	-rm -f foma/topsort.$(OBJEXT)
	-rm -f foma/topsort.lo
	-rm -f foma/utf8.$(OBJEXT)
	-rm -f foma/utf8.lo
	-rm -f openfst-1.1/src/lib/compat.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/compat.lo
	-rm -f openfst-1.1/src/lib/flags.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/flags.lo
	-rm -f openfst-1.1/src/lib/fst.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/fst.lo
	-rm -f openfst-1.1/src/lib/properties.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/properties.lo
	-rm -f openfst-1.1/src/lib/symbol-table.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/symbol-table.lo
	-rm -f openfst-1.1/src/lib/util.$(OBJEXT)
	-rm -f openfst-1.1/src/lib/util.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ConvertTransducerFormat.Plo
include ./$(DEPDIR)/FomaTransducer.Plo
include ./$(DEPDIR)/GlobalSymbolTable.Plo
include ./$(DEPDIR)/HfstTokenizer.Plo
include ./$(DEPDIR)/LogFstTrieFunctions.Plo
include ./$(DEPDIR)/LogWeightTransducer.Plo
include ./$(DEPDIR)/SfstTransducer.Plo
include ./$(DEPDIR)/SymbolDefs.Plo
include ./$(DEPDIR)/TropicalWeightTransducer.Plo
include SFST/src/$(DEPDIR)/alphabet.Plo
include SFST/src/$(DEPDIR)/basic.Plo
include SFST/src/$(DEPDIR)/compact.Plo
include SFST/src/$(DEPDIR)/determinise.Plo
include SFST/src/$(DEPDIR)/fst.Plo
include SFST/src/$(DEPDIR)/generate.Plo
include SFST/src/$(DEPDIR)/interface.Plo
include SFST/src/$(DEPDIR)/lowmem.Plo
include SFST/src/$(DEPDIR)/make-compact.Plo
include SFST/src/$(DEPDIR)/operators.Plo
include SFST/src/$(DEPDIR)/robust.Plo
include SFST/src/$(DEPDIR)/utf8.Plo
include foma/$(DEPDIR)/apply.Plo
include foma/$(DEPDIR)/coaccessible.Plo
include foma/$(DEPDIR)/constructions.Plo
include foma/$(DEPDIR)/define.Plo
include foma/$(DEPDIR)/determinize.Plo
include foma/$(DEPDIR)/dynarray.Plo
include foma/$(DEPDIR)/extract.Plo
include foma/$(DEPDIR)/flags.Plo
include foma/$(DEPDIR)/int_stack.Plo
include foma/$(DEPDIR)/invert.Plo
include foma/$(DEPDIR)/io.Plo
include foma/$(DEPDIR)/lex.cmatrix.Plo
include foma/$(DEPDIR)/lex.lexc.Plo
include foma/$(DEPDIR)/lex.yy.Plo
include foma/$(DEPDIR)/lexcread.Plo
include foma/$(DEPDIR)/mem.Plo
include foma/$(DEPDIR)/minimize.Plo
include foma/$(DEPDIR)/regex.tab.Plo
include foma/$(DEPDIR)/reverse.Plo
include foma/$(DEPDIR)/rewrite.Plo
include foma/$(DEPDIR)/sigma.Plo
include foma/$(DEPDIR)/spelling.Plo
include foma/$(DEPDIR)/structures.Plo
include foma/$(DEPDIR)/topsort.Plo
include foma/$(DEPDIR)/utf8.Plo
include openfst-1.1/src/lib/$(DEPDIR)/compat.Plo
include openfst-1.1/src/lib/$(DEPDIR)/flags.Plo
include openfst-1.1/src/lib/$(DEPDIR)/fst.Plo
include openfst-1.1/src/lib/$(DEPDIR)/properties.Plo
include openfst-1.1/src/lib/$(DEPDIR)/symbol-table.Plo
include openfst-1.1/src/lib/$(DEPDIR)/util.Plo

.C.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cc.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf SFST/src/.libs SFST/src/_libs
	-rm -rf foma/.libs foma/_libs
	-rm -rf openfst-1.1/src/lib/.libs openfst-1.1/src/lib/_libs
install-fomaincludeHEADERS: $(fomainclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(fomaincludedir)" || $(MKDIR_P) "$(DESTDIR)$(fomaincludedir)"
	@list='$(fomainclude_HEADERS)'; test -n "$(fomaincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(fomaincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(fomaincludedir)" || exit $$?; \
	done

uninstall-fomaincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(fomainclude_HEADERS)'; test -n "$(fomaincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(fomaincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(fomaincludedir)" && rm -f $$files
install-hfstincludeHEADERS: $(hfstinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(hfstincludedir)" || $(MKDIR_P) "$(DESTDIR)$(hfstincludedir)"
	@list='$(hfstinclude_HEADERS)'; test -n "$(hfstincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(hfstincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(hfstincludedir)" || exit $$?; \
	done

uninstall-hfstincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(hfstinclude_HEADERS)'; test -n "$(hfstincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(hfstincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(hfstincludedir)" && rm -f $$files
install-implincludeHEADERS: $(implinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(implincludedir)" || $(MKDIR_P) "$(DESTDIR)$(implincludedir)"
	@list='$(implinclude_HEADERS)'; test -n "$(implincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(implincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(implincludedir)" || exit $$?; \
	done

uninstall-implincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(implinclude_HEADERS)'; test -n "$(implincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(implincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(implincludedir)" && rm -f $$files
install-sfstincludeHEADERS: $(sfstinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(sfstincludedir)" || $(MKDIR_P) "$(DESTDIR)$(sfstincludedir)"
	@list='$(sfstinclude_HEADERS)'; test -n "$(sfstincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(sfstincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(sfstincludedir)" || exit $$?; \
	done

uninstall-sfstincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(sfstinclude_HEADERS)'; test -n "$(sfstincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sfstincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sfstincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(fomaincludedir)" "$(DESTDIR)$(hfstincludedir)" "$(DESTDIR)$(implincludedir)" "$(DESTDIR)$(sfstincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f SFST/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f SFST/src/$(am__dirstamp)
	-rm -f foma/$(DEPDIR)/$(am__dirstamp)
	-rm -f foma/$(am__dirstamp)
	-rm -f openfst-1.1/src/lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f openfst-1.1/src/lib/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) SFST/src/$(DEPDIR) foma/$(DEPDIR) openfst-1.1/src/lib/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-fomaincludeHEADERS install-hfstincludeHEADERS \
	install-implincludeHEADERS install-sfstincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) SFST/src/$(DEPDIR) foma/$(DEPDIR) openfst-1.1/src/lib/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-fomaincludeHEADERS \
	uninstall-hfstincludeHEADERS uninstall-implincludeHEADERS \
	uninstall-sfstincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-fomaincludeHEADERS install-hfstincludeHEADERS \
	install-html install-html-am install-implincludeHEADERS \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am \
	install-sfstincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-fomaincludeHEADERS \
	uninstall-hfstincludeHEADERS uninstall-implincludeHEADERS \
	uninstall-sfstincludeHEADERS

		foma/fomalibconf.h
		foma/fomalib.h
		foma/lexc.h
		foma/regex.tab.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
